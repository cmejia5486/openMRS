name: AI Correlation (SEC-CAT -> Checklist & Summary DOCX)

on:
  workflow_call:
    inputs:
      artifact_pattern:
        description: "Patrón para descargar artefactos de este run"
        required: false
        type: string
        default: "*"
      checklist_path:
        description: "Ruta al JSON de requisitos (469)"
        required: false
        type: string
        default: "requirements/requisitos.json"
      openai_model:
        description: "Modelo OpenAI"
        required: false
        type: string
        default: "gpt-4o-mini"
      max_requirements:
        description: "Límite de requisitos a auditar (-1 = todos)"
        required: false
        type: number
        default: -1
    secrets:
      OPENAI_API_KEY: { required: true }
      APP_ID: { required: false }
      APP_INSTALLATION_ID: { required: false }
      APP_PRIVATE_KEY: { required: false }

permissions:
  contents: write       # crear PR/commits si hay App
  actions: write        # descargar artifacts v4
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  correlate:
    name: Correlate SEC-CAT with scan artifacts (DOCX outputs)
    if: ${{ github.actor != 'dependabot[bot]' && !startsWith(github.ref_name, 'dependabot/') }}
    runs-on: ubuntu-latest

    steps:
      - name: Generate GitHub App token (optional)
        id: app-token
        if: ${{ secrets.APP_ID && secrets.APP_INSTALLATION_ID && secrets.APP_PRIVATE_KEY }}
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          installation_retrieval_mode: id
          installation_retrieval_payload: ${{ secrets.APP_INSTALLATION_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token || github.token }}
          fetch-depth: 0

      # Descarga artifacts del MISMO run (v4, pattern+merge)
      - name: Download artifacts from this run
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          pattern: ${{ inputs.artifact_pattern }}
          merge-multiple: true
          path: reports

      - name: List downloaded files (debug)
        run: |
          echo "=== reports ==="
          ls -lahR reports || true

      # Seguridad: si por alguna razón llegan comprimidos, extraer sin fallar
      - name: Unpack any zipped artifacts (safe)
        shell: bash
        continue-on-error: true
        run: |
          set -euo pipefail
          found=0
          while IFS= read -r -d '' z; do
            found=1
            echo "Unzipping: $z"
            d="reports/_unzipped"
            mkdir -p "$d"
            unzip -o "$z" -d "$d" >/dev/null
          done < <(find reports -type f -name '*.zip' -print0 || true)
          if [ -d reports/_unzipped ]; then
            rsync -a reports/_unzipped/ reports/ || true
          fi
          echo "After unzip:"
          ls -lahR reports || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir "openai>=1.55.0" python-docx pandas orjson tqdm

      - name: Run AI correlation
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ inputs.openai_model }}
        run: |
          mkdir -p report
          python scripts/ai_correlate.py \
            --checklist "${{ inputs.checklist_path }}" \
            --reports "reports" \
            --source-root "." \
            --output-dir "report" \
            --max-requirements "${{ inputs.max_requirements }}"

      - name: Upload AI reports
        uses: actions/upload-artifact@v4
        with:
          name: ai-correlation-reports
          path: report/

      - name: Create pull request with outputs (optional)
        if: ${{ steps.app-token.outputs.token }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.app-token.outputs.token }}
          add-paths: report/**
          commit-message: "chore(ai): SEC-CAT adapted, checklist & audit summary"
          title: "AI: SEC-CAT & audit outputs"
          body: |
            This PR adds:
            - SEC-CAT adapted (DOCX)
            - Compliance checklist (DOCX)
            - Audit summary (DOCX + MD + JSON)
            Based on artifacts (MobSF, SAST, Trivy) and requisitos.json.
          branch: ai/correlation-results
