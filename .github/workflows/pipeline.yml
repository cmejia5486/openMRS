# .github/workflows/pipeline.yml
name: Pipeline (orquestador)

"on":
  push:
    branches: [ "main", "**" ]
  pull_request: {}
  workflow_dispatch: {}

# El caller debe conceder al menos los permisos que requieren los reusables.
# Code Scanning (CodeQL/upload-sarif) necesita security-events: write.
permissions:
  contents: write
  pull-requests: write
  actions: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  codeql_analysis:
    name: CodeQL
    if: ${{ github.actor != 'dependabot[bot]' &&
            !(github.head_ref != '' && startsWith(github.head_ref, 'dependabot/')) &&
            !(github.ref_name != '' && startsWith(github.ref_name, 'dependabot/')) }}
    uses: ./.github/workflows/codeql-analysis.yml
    secrets: inherit
    with:
      languages: "java,kotlin"
      build-mode: "none"

  security_scans:
    name: Security Scans
    needs: [codeql_analysis]
    if: ${{ github.actor != 'dependabot[bot]' &&
            !(github.head_ref != '' && startsWith(github.head_ref, 'dependabot/')) &&
            !(github.ref_name != '' && startsWith(github.ref_name, 'dependabot/')) }}
    uses: ./.github/workflows/security-scans.yml
    secrets: inherit
    with:
      trivy_path: "."
      trivy_severity: "CRITICAL,HIGH"

  mobsf:
    name: MobSF
    needs: [security_scans]
    if: ${{ github.actor != 'dependabot[bot]' &&
            !(github.head_ref != '' && startsWith(github.head_ref, 'dependabot/')) &&
            !(github.ref_name != '' && startsWith(github.ref_name, 'dependabot/')) }}
    uses: ./.github/workflows/mobsf.yml
    secrets: inherit
    with:
      apk_glob: "**/*.apk"
      apk_artifact_name: ""  # si quieres bajar un artefacto previo, pon su nombre

  noop:
    name: No-op para Dependabot
    if: ${{ github.actor == 'dependabot[bot]' ||
            (github.head_ref != '' && startsWith(github.head_ref, 'dependabot/')) ||
            (github.ref_name != '' && startsWith(github.ref_name, 'dependabot/')) }}
    runs-on: ubuntu-latest
    steps:
      - run: "printf '%s\n' 'Invocando Job.'"
